<?xml version="1.0"?>
<project name="raise" basedir="." default="compile"> 

    <!-- Internal resources needed to get DIATOMS to work correctly -->
    <property name="dir.build" value="build"/>
    <property name="dir.src" value="src"/>
    <property name="dir.lib" value="lib"/>	

    <path id="classpath.project">

        <!-- Resources needed in classpath to get DIATOMS to work -->
       	<pathelement location="${dir.build}"/>
		<pathelement location="${dir.lib}/ant.jar"/>
        <pathelement location="${dir.lib}/xstream-1.1.3.jar"/>
        <pathelement location="${dir.lib}/${dir.xstream}/lib/xpp3-1.1.3.4d_b4_min.jar/"/>
        <pathelement location="${dir.src}"/>
        <pathelement location="${dir.lib}/junit.jar"/>
	</path>

    <target name="prepare">
        <mkdir dir="${dir.build}"/>
    </target>
    
	<target  name="clean"
        description="Deletes the 'build' directory.">

      <delete dir="${dir.build}"/>
    </target>

  	<target name="compile" 
         description="Compiles all source files.">
        <javac srcdir="${dir.src}" destdir="${dir.build}"
		debug = "true" debuglevel = "lines,var,source" 
		source = "1.5"
                includes="raise/reduce/**.java,raise/cev/**.java">
           <classpath refid="${classpath.project}"/> 
        </javac>
    </target>
	
	<target name = "compileVis"
		description="Compiles the visualization package.">
		<javac srcdir="${dir.src}" destdir="${dir.build}"
		debug = "true" debuglevel = "lines,var,source" 
		source = "1.5"
                includes="raise/cev/**.java">
            <classpath refid="${classpath.project}"/>
        </javac>
    </target>		
	
	<target name="RunVis" depends = "compileVis" 
			description="Run the visualization.">
		<java classname = "raise.cev.CoverageEffectivenessVisualization" 
			fork = "true">
		<classpath refid="classpath.project"/>
		</java>
	</target>
						
	<!--  Tests only the SetCover class.  -->
	<target name="testSetCover" depends="compile"
		description="Executes the JUnit test suite for the raise package.">
		
         <junit
            printsummary="yes"
            haltonfailure="yes"
            haltonerror="yes"
            fork="yes"
				maxmemory="512m" >

             <classpath refid="classpath.project"/> 
            <formatter type="plain" usefile="false"/>
            <batchtest fork="no" todir="${dir.build}">
                <fileset dir="${dir.src}">
                    <include name="raise/reduce/TestSetCover.java"/>
		</fileset>
            </batchtest>
        </junit>
   </target>
     
</project>
